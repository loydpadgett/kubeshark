config: {}
dumplogs: false
headless: false
kube:
  configpath: ""
  context: ""
license
logs:
  file: ""
manifests:
  dump: false
scripting:
  env: null
  source: ""
  watchscripts: true
tap:
  annotations: {}
  auth:
    approveddomains: []
    approvedemails: []
    enabled: false
  debug: false
  docker:
    imagepullpolicy: Always
    imagepullsecrets: null
    registry: docker.io/kubeshark
    tag: latest
  dryrun: false
  ignoretainted: false
  ingress:
    #certmanager: letsencrypt-prod
    classname: nginx
    controller: k8s.io/ingress-nginx
    enabled: true
    host: ks.auth.k3s.lan
    tls: 
      - secretName: ks-auth-secret
  ipv6: true
  labels: {}
  namespaces: []
  nodeselectorterms:
    - matchExpressions:
        - key: kubernetes.io/os
          operator: In
          values:
            - cp1
  packetcapture: libpcap
  pcap: ""
  persistentstorage: false
  proxy:
    front:
      port: 8899
    host: 0.0.0.0
    hub:
      port: 8898
      srvport: 8898
    worker:
      srvport: 8897
  regex: .*
  release:
    name: kubeshark
    namespace: default
    repo: https://helm.kubeshark.co
  resources:
    hub:
      limits:
        cpu: 750m
        memory: 1Gi
      requests:
        cpu: 50m
        memory: 50Mi
    worker:
      limits:
        cpu: 750m
        memory: 1Gi
      requests:
        cpu: 50m
        memory: 50Mi
  servicemesh: true
  storageclass: standard
  storagelimit: 200Mi
  telemetry:
    enabled: true
  tls: true
